(define (problem grid-x4-y4-t4-k4-l4-p50)
(:domain grid)
(:objects 
        f0-0f f1-0f f2-0f f3-0f 
        f0-1f f1-1f f2-1f f3-1f 
        f0-2f f1-2f f2-2f f3-2f 
        f0-3f f1-3f f2-3f f3-3f 
        shape0 shape1 shape2 shape3 
        key3-0 key3-1 key3-2 key3-3 
)
(:init
(arm-empty)
(place f0-0f)
(place f1-0f)
(place f2-0f)
(place f3-0f)
(place f0-1f)
(place f1-1f)
(place f2-1f)
(place f3-1f)
(place f0-2f)
(place f1-2f)
(place f2-2f)
(place f3-2f)
(place f0-3f)
(place f1-3f)
(place f2-3f)
(place f3-3f)
(shape shape0)
(shape shape1)
(shape shape2)
(shape shape3)
(key key3-0)
(key-shape key3-0 shape3)
(key key3-1)
(key-shape key3-1 shape3)
(key key3-2)
(key-shape key3-2 shape3)
(key key3-3)
(key-shape key3-3 shape3)
(conn f0-0f f1-0f)
(conn f1-0f f2-0f)
(conn f2-0f f3-0f)
(conn f0-1f f1-1f)
(conn f1-1f f2-1f)
(conn f2-1f f3-1f)
(conn f0-2f f1-2f)
(conn f1-2f f2-2f)
(conn f2-2f f3-2f)
(conn f0-3f f1-3f)
(conn f1-3f f2-3f)
(conn f2-3f f3-3f)
(conn f0-0f f0-1f)
(conn f1-0f f1-1f)
(conn f2-0f f2-1f)
(conn f3-0f f3-1f)
(conn f0-1f f0-2f)
(conn f1-1f f1-2f)
(conn f2-1f f2-2f)
(conn f3-1f f3-2f)
(conn f0-2f f0-3f)
(conn f1-2f f1-3f)
(conn f2-2f f2-3f)
(conn f3-2f f3-3f)
(conn f1-0f f0-0f)
(conn f2-0f f1-0f)
(conn f3-0f f2-0f)
(conn f1-1f f0-1f)
(conn f2-1f f1-1f)
(conn f3-1f f2-1f)
(conn f1-2f f0-2f)
(conn f2-2f f1-2f)
(conn f3-2f f2-2f)
(conn f1-3f f0-3f)
(conn f2-3f f1-3f)
(conn f3-3f f2-3f)
(conn f0-1f f0-0f)
(conn f1-1f f1-0f)
(conn f2-1f f2-0f)
(conn f3-1f f3-0f)
(conn f0-2f f0-1f)
(conn f1-2f f1-1f)
(conn f2-2f f2-1f)
(conn f3-2f f3-1f)
(conn f0-3f f0-2f)
(conn f1-3f f1-2f)
(conn f2-3f f2-2f)
(conn f3-3f f3-2f)
(open f0-0f)
(open f2-0f)
(open f3-0f)
(open f0-1f)
(open f1-1f)
(open f0-2f)
(open f1-2f)
(open f2-2f)
(open f3-2f)
(open f0-3f)
(open f1-3f)
(open f2-3f)
(locked f2-1f)
(lock-shape f2-1f shape3)
(locked f3-3f)
(lock-shape f3-3f shape3)
(locked f1-0f)
(lock-shape f1-0f shape3)
(locked f3-1f)
(lock-shape f3-1f shape3)
(at key3-0 f1-2f)
(at key3-1 f2-1f)
(at key3-2 f0-3f)
(at key3-3 f1-3f)
(at-robot f0-3f)
)
(:goal
(and
(at key3-3 f0-2f)
)
)
)


